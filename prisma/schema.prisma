// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
}

enum ApplicationStatus {
  CANDIDATE_REJECTED
  OFFER_ACCEPTED
  INTERVIEW_DONE
  APPLIED
  CONTACTED
  HIRED
  OFFER_MADE
  INTERVIEW_SCHEDULED
}

model User {
  id         Int      @id @default(autoincrement()) @db.Int
  user_id    String   @unique @db.Char(36)
  full_name  String   @db.VarChar(100)
  email      String   @unique
  password   String?  @db.Text
  role       Role     @default(ADMIN)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @updatedAt @db.Timestamp(6)

  @@index([full_name, email])
}

model Applicant {
  id                  Int    @id @default(autoincrement()) @db.Int
  applicant_id        String @unique @db.Char(36)
  email               String
  full_name           String
  phone               String
  country             String
  years_of_experience Int

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @updatedAt @db.Timestamp(6)

  applications Application[]

  @@index([applicant_id, created_at, full_name])
}

model Application {
  id           Int               @id @default(autoincrement()) @db.Int
  applicant_id String            @db.Char(36)
  resume_url   String            @db.Text
  job_role     String
  status       ApplicationStatus @default(APPLIED)
  applied_at   DateTime          @default(now()) @db.Timestamp(6)
  updated_at   DateTime          @updatedAt

  applicant Applicant @relation(fields: [applicant_id], references: [applicant_id])

  @@index([applicant_id])
}
